//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18449
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Caterpillar.Core
{


    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class LanguageStrings {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal LanguageStrings() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Caterpillar.Core.LanguageStrings", typeof(LanguageStrings).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Argument &apos;{0}&apos; can not be null..
        /// </summary>
        public static string ArgumentNullExceptionMessageFormat {
            get {
                return ResourceManager.GetString("ArgumentNullExceptionMessageFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Core level exception is occured. Provided error message is : {0}.
        /// </summary>
        public static string CoreLevelExceptonMessageFormat {
            get {
                return ResourceManager.GetString("CoreLevelExceptonMessageFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Exception manager is not confgured. Logging is not possible. Immediately configure exception manager by setting ExceptionLoggingProviders property..
        /// </summary>
        public static string ExceptionManagerIsNotConfiguredMessage {
            get {
                return ResourceManager.GetString("ExceptionManagerIsNotConfiguredMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Can not create one of types required by Exception Manager. For repository, all types must be derived from IExceptionLogReposityory which is required by ExceptionLoggingProviderBase type. For provider, all types must be derived from ExceptionLoggingProviderBase type. For ExceptionLoggingProviderBase types, supply repository created before for ExceptionLoggingProviderBase&apos;s constructor..
        /// </summary>
        public static string ExceptionManagingTypesCreationError {
            get {
                return ResourceManager.GetString("ExceptionManagingTypesCreationError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Opps! Unwanted exception occured. We are extremely sorry for the inconvenience situation. Our support team has been alerted..
        /// </summary>
        public static string GeneralExceptionMessage {
            get {
                return ResourceManager.GetString("GeneralExceptionMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Object,&apos;{0}&apos;,  is null..
        /// </summary>
        public static string ObjectNullExceptionMessageFormat {
            get {
                return ResourceManager.GetString("ObjectNullExceptionMessageFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Password information for connection string must be set..
        /// </summary>
        public static string PasswordInformationMustBeSetForConnectionString {
            get {
                return ResourceManager.GetString("PasswordInformationMustBeSetForConnectionString", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Server information for connection string must be set..
        /// </summary>
        public static string ServerInformationMustBeSetForConnectionString {
            get {
                return ResourceManager.GetString("ServerInformationMustBeSetForConnectionString", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No database found with name &apos;{0}&apos;..
        /// </summary>
        public static string SqlManagementNoDatabaseBySpecifiedNameException {
            get {
                return ResourceManager.GetString("SqlManagementNoDatabaseBySpecifiedNameException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No table or view named with &apos;{0}&apos; found in database &apos;{1}&apos;..
        /// </summary>
        public static string SqlManagementNoViewOrTableBySpecifiedNameException {
            get {
                return ResourceManager.GetString("SqlManagementNoViewOrTableBySpecifiedNameException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to User Id information for connection string must be set..
        /// </summary>
        public static string UserIdInformationMustBeSetForConnectionString {
            get {
                return ResourceManager.GetString("UserIdInformationMustBeSetForConnectionString", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type &apos;{0}&apos; can not be validated..
        /// </summary>
        public static string ValidationExceptionMessageFormat {
            get {
                return ResourceManager.GetString("ValidationExceptionMessageFormat", resourceCulture);
            }
        }
    }
}
